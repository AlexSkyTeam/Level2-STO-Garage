version: '3.7'
services:
  iddb:
    image: postgres:14-alpine
    ports:
      - '5401:5432'
    volumes:
      - ./id/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    command: [ "postgres", "-c", "log_statement=all" ]
  catalogdb:
    image: postgres:14-alpine
    ports:
      - '5402:5432'
    volumes:
      - ./catalog/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    command: [ "postgres", "-c", "log_statement=all" ]
  planerdb:
    image: postgres:14-alpine
    ports:
      - '5403:5432'
    volumes:
      - ./planer/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    command: [ "postgres", "-c", "log_statement=all" ]
  orderdb:
    image: postgres:14-alpine
    ports:
      - '5404:5432'
    volumes:
      - ./order/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    command: [ "postgres", "-c", "log_statement=all" ]
  messagedb:
    image: postgres:14-alpine
    ports:
      - '5405:5432'
    volumes:
      - ./message/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    command: [ "postgres", "-c", "log_statement=all" ]
  bonusdb:
    image: postgres:14-alpine
    ports:
      - '5406:5432'
    volumes:
      - ./bonus/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    command: [ "postgres", "-c", "log_statement=all" ]
  zookeeper:
    image: bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'